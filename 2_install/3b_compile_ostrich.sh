# Compile ostrich on DOD HPCMP Carpenter
# export variables are used in the makefile. 

#---------------------------------
# Specify settings
#---------------------------------

# --- Location of source code
# Find the path to the source code in 'control_active.txt'
dest_line=$(grep -m 1 "^install_path_ostrich" ../0_control_files/control_active.txt)  # full settings line
ostrich_path=$(echo ${dest_line##*|})   # removing the leading text up to '|' 
ostrich_path=$(echo ${ostrich_path%%#*})  # removing the trailing comments, if any are present

# Specify the default path if needed
if [ "$ostrich_path" = "default" ]; then
  
 # Get the root path and append appropriate install directories
 root_line=$(grep -m 1 "^root_path" ../0_control_files/control_active.txt)
 root_path=$(echo ${root_line##*|}) 
 root_path=$(echo ${root_path%%#*}) 
 ostrich_path="${root_path}/installs/ostrich"

# With custom path, we still need to specify the /route directory for compilation
else 
 ostrich_path="${ostrich_path}"
fi
echo $ostrich_path
# Specify home directory of mizuroute/build
#export 
F_MASTER=$ostrich_path


# --- Specify a name for the executable 
# Find the desired executable name in 'control_active.txt'
exe_line=$(grep -m 1 "^exe_name_ostrich" ../0_control_files/control_active.txt) 
ostrich_exe=$(echo ${exe_line##*|}) 
ostrich_exe=$(echo ${ostrich_exe%%#*}) 
#export 
EXE=$ostrich_exe

# --- Library settings
# Load the required libraries
module purge
module load compiler-rt/latest
module load tbb/latest
module load mkl/latest
module load cseinit
module load cse/openmpi/3.1.6



# --- Define optional setting
# fast:      Enables optimizations
# debug:     Minimum debug options, still
# profile:   Enables profiling
#export MODE=debug 
                 
				 
#---------------------------------
# Print the settings
#---------------------------------
echo 'build directory: ' $F_MASTER
echo 'executable name: ' $EXE
echo # empty line				 

owd=$(pwd)
cd "$ostrich_path/build"

#---------------------------------
# Compile
#---------------------------------
make -f makefile GCC

cd "$owd"
#---------------------------------
# Code provenance
#---------------------------------
# Generates a basic log file in the domain folder and copies the control file and itself there.
# Make a log directory if it doesn't exist
log_path="${ostrich_path}/_workflow_log"
mkdir -p $log_path

# Log filename
today=`date '+%F'`
log_file="${today}_compile_log.txt"

# Make the log
this_file='3b_compile_ostrich.sh'
echo "Log generated by ${this_file} on `date '+%F %H:%M:%S'`"  > $log_path/$log_file # 1st line, store in new file
echo 'Compiled ostrich into parent directory' >> $log_path/$log_file # 2nd line, append to existing file

# Copy this file to log directory
cp $this_file $log_path
